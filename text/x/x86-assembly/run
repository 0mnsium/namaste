> Works with: nasm version 2.05.01
	> This is known to work on Linux, it may or may not work on other Unix-like systems

	> Prints "Namaste!" to stdout (and there is probably an even simpler version):

section .data
msg     db      'Namaste!', 0AH
len     equ     $-msg
 
section .text
global  _start
_start: mov     edx, len
        mov     ecx, msg
        mov     ebx, 1
        mov     eax, 4
        int     80h
 
        mov     ebx, 0
        mov     eax, 1
        int     80h

> AT&T syntax: works with gcc (version 4.9.2) and gas (version 2.5):

.section .text
 
.globl main
 
main:
	movl $4,%eax	#syscall number 4
	movl $1,%ebx	#number 1 for stdout
	movl $str,%ecx	#string pointer
	movl $16,%edx	#number of bytes
	int $0x80	#syscall interrupt
	ret
 
.section .data
str: .ascii "Namaste!\12"

> AT&T syntax (x64):

// No "main" used
// compile with `gcc -nostdlib`
#define SYS_WRITE   $1
#define STDOUT      $1
#define SYS_EXIT    $60
#define MSGLEN      $14
 
.global _start
.text
 
_start:
    movq    $message, %rsi          // char *
    movq    SYS_WRITE, %rax
    movq    STDOUT, %rdi
    movq    MSGLEN, %rdx
    syscall                         // sys_write(message, stdout, 0x14);
 
    movq    SYS_EXIT, %rax
    xorq    %rdi, %rdi              // The exit code.
    syscall                         // exit(0)
 
.data
message:    .ascii "Namaste!\n"
